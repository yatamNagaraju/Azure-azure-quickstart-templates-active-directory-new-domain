{
	"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"adminUsername": {
			"type": "string",
			"metadata": {
				"description": "The name of the administrator account of the new VM and domain"
			}
		},
		"adminPassword": {
			"type": "securestring",
			"metadata": {
				"description": "The password for the administrator account of the new VM and domain"
			}
		},
		"domainName": {
			"type": "string",
			"metadata": {
				"description": "The FQDN of the Active Directory Domain to be created"
			}
		},
		"dnsPrefix": {
			"type": "string",
			"metadata": {
				"description": "The DNS prefix for the public IP address used by the Load Balancer"
			}
		},
		"vmSize": {
			"type": "string",
			"defaultValue": "Standard_D2s_v3",
			"metadata": {
				"description": "Size of the VM for the controller"
			}
		},
		"_artifactsLocation": {
			"type": "string",
			"metadata": {
				"description": "The location of resources, such as templates and DSC modules, that the template depends on"
			},
			"defaultValue": "https://github.com/yatamNagaraju/Azure-azure-quickstart-templates-active-directory-new-domain"
		},
		"virtualMachineName": {
			"type": "string",
			"defaultValue": "vm111",
			"metadata": {
				"description": "Virtual machine name."
			}
		},
		"virtualNetworkName": {
			"type": "string",
			"defaultValue": "skillup-vnet1",
			"metadata": {
				"description": "Virtual network name."
			}
		},
		"virtualNetworkAddressRange": {
			"type": "string",
			"defaultValue": "10.0.0.0/16",
			"metadata": {
				"description": "Virtual network address range."
			}
		},
		"networkInterfaceName": {
			"type": "string",
			"defaultValue": "adNic",
			"metadata": {
				"description": "Network interface name."
			}
		},
		"subnetName": {
			"type": "string",
			"defaultValue": "adSubnet",
			"metadata": {
				"description": "Subnet name."
			}
		},
                "privateIPAddress": {
                           "type": "string",
                           "defaultValue": "10.0.0.4",
                           "metadata": {
                                    "description": "Private IP address."
                        }
                 },
		"subnetRange": {
			"type": "string",
			"defaultValue": "10.0.0.0/24",
			"metadata": {
				"description": "Subnet IP range."
			}
		},
		"publicIPAddressName": {
			"type": "string",
			"defaultValue": "adPublicIP",
			"metadata": {
				"description": "Subnet IP range."
			}
		},
		"availabilitySetName": {
			"type": "string",
			"defaultValue": "adAvailabiltySet",
			"metadata": {
				"description": "Availability set name."
			}
		},
                "location": {
                     "type": "string"
                    }
	},
	"resources": [{
			"type": "Microsoft.Network/publicIPAddresses",
			"apiVersion": "2019-02-01",
			"name": "[parameters('publicIPAddressName')]",
			"location": "[resourcegroup().location]",
			"properties": {
				"publicIPAllocationMethod": "Static",
				"dnsSettings": {
					"domainNameLabel": "[parameters('dnsPrefix')]"
				}
			}
		},
		{
			"type": "Microsoft.Compute/availabilitySets",
			"apiVersion": "2019-03-01",
			"location": "[resourcegroup().location]",
			"name": "[parameters('availabilitySetName')]",
			"properties": {
				"PlatformUpdateDomainCount": 20,
				"PlatformFaultDomainCount": 2
			},
			"sku": {
				"name": "Aligned"
			}
		},
		{
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "2018-11-01",

			"name": "VNet",
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/vnet.json'))]",
					"contentVersion": "1.0.0.0"
				},
				"parameters": {
					"virtualNetworkName": {
						"value": "[parameters('virtualNetworkName')]"
					},
					"virtualNetworkAddressRange": {
						"value": "[parameters('virtualNetworkAddressRange')]"
					},
					"subnetName": {
						"value": "[parameters('subnetName')]"
					},
					"subnetRange": {
						"value": "[parameters('subnetRange')]"
					}
				}
			}
		},

		{
			"type": "Microsoft.Network/networkInterfaces",
			"apiVersion": "2019-02-01",
			"name": "[parameters('networkInterfaceName')]",
			"location": "[resourcegroup().location]",
			"dependsOn": [
				"VNet"
			],
			"properties": {
				"ipConfigurations": [{
					"name": "ipconfig1",
					"properties": {
						"privateIPAllocationMethod": "Static",
						"privateIPAddress": "[parameters('privateIPAddress')]",
						"subnet": {
							"id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnetName'))]"
						}
					}
				}]
			}
		},
		{
			"type": "Microsoft.Compute/virtualMachines",
			"apiVersion": "2019-03-01",
			"name": "[parameters('virtualMachineName')]",
			"location": "[resourcegroup().location]",
			"dependsOn": [
				"[parameters('networkInterfaceName')]",
				"[parameters('availabilitySetName')]"
			],
			"properties": {
				"hardwareProfile": {
					"vmSize": "[parameters('vmSize')]"
				},
				"availabilitySet": {
					"id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySetName'))]"
				},
				"osProfile": {
					"computerName": "[parameters('virtualMachineName')]",
					"adminUsername": "[parameters('adminUsername')]",
					"adminPassword": "[parameters('adminPassword')]"
				},
				"storageProfile": {
                                       "imageReference": {
                                       "publisher": "MicrosoftWindowsServer",
                                       "offer": "WindowsServer",
                                       "sku": "2016-Datacenter",
                                       "version": "latest"
                               },
					"osDisk": {
						"name": "[concat(parameters('virtualMachineName'),'_OSDisk')]",
						"caching": "ReadOnly",
						"createOption": "FromImage",
						"managedDisk": {
							"storageAccountType": "StandardSSD_LRS"
						}
					}
				},
				"networkProfile": {
					"networkInterfaces": [{
						"id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaceName'))]"
					}]
				}
			},
			"resources": [{
				"type": "extensions",
				"apiVersion": "2019-03-01",
				"name": "CreateADForest",
				"location": "[resourcegroup().location]",
				"dependsOn": [
					"[parameters('virtualMachineName')]"
				],
				"properties": {
					"publisher": "Microsoft.Powershell",
					"type": "DSC1",
					"typeHandlerVersion": "2.19",
					"autoUpgradeMinorVersion": true,
					"settings": {
						"ModulesUrl": "[uri(parameters('_artifactsLocation'), concat('DSC1/CreateADPDC.zip'))]",
						"ConfigurationFunction": "CreateADPDC.ps1\\CreateADPDC",
						"Properties": {
							"DomainName": "[parameters('domainName')]",
							"AdminCreds": {
								"UserName": "[parameters('adminUsername')]",
								"Password": "PrivateSettingsRef:AdminPassword"
							}
						}
					},
					"protectedSettings": {
						"Items": {
							"AdminPassword": "[parameters('adminPassword')]"
						}
					}
				}
			}]
		},
		{
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "2018-11-01",
			"name": "UpdateVNetDNS",
			"dependsOn": [
				"CreateADForest"
			],
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/vnet-with-dns-server.json'))]",
					"contentVersion": "1.0.0.0"
				},
				"parameters": {
					"virtualNetworkName": {
						"value": "[parameters('virtualNetworkName')]"
					},
					"virtualNetworkAddressRange": {
						"value": "[parameters('virtualNetworkAddressRange')]"
					},
					"subnetName": {
						"value": "[parameters('subnetName')]"
					},
					"subnetRange": {
						"value": "[parameters('subnetRange')]"
					},
                                        "DNSServerAddress": {
                                                "value": [
                                                    "[parameters('privateIPAddress')]"
                                                  ]
                                         },
                                        "location": {
						"value": "[parameters('location')]"
                                        }
                                        
				}
			}
		}
	]
}
